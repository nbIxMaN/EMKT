//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PixServiseTests.EMKServise {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VersionInfo", Namespace="http://schemas.datacontract.org/2004/07/WebService.Core")]
    [System.SerializableAttribute()]
    public partial class VersionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseVersion {
            get {
                return this.DatabaseVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseVersionField, value) != true)) {
                    this.DatabaseVersionField = value;
                    this.RaisePropertyChanged("DatabaseVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceVersion {
            get {
                return this.ServiceVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceVersionField, value) != true)) {
                    this.ServiceVersionField = value;
                    this.RaisePropertyChanged("ServiceVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseBase", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Case")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.CaseStat))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.CaseAmb))]
    public partial class CaseBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OpenDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CloseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HistoryNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdCaseMisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdCaseAidTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdPaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ConfidentialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DoctorConfidentialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CuratorConfidentialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdLpuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdCaseResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedicalStaff DoctorInChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.Participant AuthenticatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.Participant AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.Participant LegalAuthenticatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.Guardian GuardianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdPatientMisField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OpenDate {
            get {
                return this.OpenDateField;
            }
            set {
                if ((this.OpenDateField.Equals(value) != true)) {
                    this.OpenDateField = value;
                    this.RaisePropertyChanged("OpenDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime CloseDate {
            get {
                return this.CloseDateField;
            }
            set {
                if ((this.CloseDateField.Equals(value) != true)) {
                    this.CloseDateField = value;
                    this.RaisePropertyChanged("CloseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string HistoryNumber {
            get {
                return this.HistoryNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.HistoryNumberField, value) != true)) {
                    this.HistoryNumberField = value;
                    this.RaisePropertyChanged("HistoryNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string IdCaseMis {
            get {
                return this.IdCaseMisField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCaseMisField, value) != true)) {
                    this.IdCaseMisField = value;
                    this.RaisePropertyChanged("IdCaseMis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public byte IdCaseAidType {
            get {
                return this.IdCaseAidTypeField;
            }
            set {
                if ((this.IdCaseAidTypeField.Equals(value) != true)) {
                    this.IdCaseAidTypeField = value;
                    this.RaisePropertyChanged("IdCaseAidType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public byte IdPaymentType {
            get {
                return this.IdPaymentTypeField;
            }
            set {
                if ((this.IdPaymentTypeField.Equals(value) != true)) {
                    this.IdPaymentTypeField = value;
                    this.RaisePropertyChanged("IdPaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public byte Confidentiality {
            get {
                return this.ConfidentialityField;
            }
            set {
                if ((this.ConfidentialityField.Equals(value) != true)) {
                    this.ConfidentialityField = value;
                    this.RaisePropertyChanged("Confidentiality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public byte DoctorConfidentiality {
            get {
                return this.DoctorConfidentialityField;
            }
            set {
                if ((this.DoctorConfidentialityField.Equals(value) != true)) {
                    this.DoctorConfidentialityField = value;
                    this.RaisePropertyChanged("DoctorConfidentiality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public byte CuratorConfidentiality {
            get {
                return this.CuratorConfidentialityField;
            }
            set {
                if ((this.CuratorConfidentialityField.Equals(value) != true)) {
                    this.CuratorConfidentialityField = value;
                    this.RaisePropertyChanged("CuratorConfidentiality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string IdLpu {
            get {
                return this.IdLpuField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLpuField, value) != true)) {
                    this.IdLpuField = value;
                    this.RaisePropertyChanged("IdLpu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public byte IdCaseResult {
            get {
                return this.IdCaseResultField;
            }
            set {
                if ((this.IdCaseResultField.Equals(value) != true)) {
                    this.IdCaseResultField = value;
                    this.RaisePropertyChanged("IdCaseResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public PixServiseTests.EMKServise.MedicalStaff DoctorInCharge {
            get {
                return this.DoctorInChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorInChargeField, value) != true)) {
                    this.DoctorInChargeField = value;
                    this.RaisePropertyChanged("DoctorInCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public PixServiseTests.EMKServise.Participant Authenticator {
            get {
                return this.AuthenticatorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticatorField, value) != true)) {
                    this.AuthenticatorField = value;
                    this.RaisePropertyChanged("Authenticator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public PixServiseTests.EMKServise.Participant Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public PixServiseTests.EMKServise.Participant LegalAuthenticator {
            get {
                return this.LegalAuthenticatorField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalAuthenticatorField, value) != true)) {
                    this.LegalAuthenticatorField = value;
                    this.RaisePropertyChanged("LegalAuthenticator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public PixServiseTests.EMKServise.Guardian Guardian {
            get {
                return this.GuardianField;
            }
            set {
                if ((object.ReferenceEquals(this.GuardianField, value) != true)) {
                    this.GuardianField = value;
                    this.RaisePropertyChanged("Guardian");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string IdPatientMis {
            get {
                return this.IdPatientMisField;
            }
            set {
                if ((object.ReferenceEquals(this.IdPatientMisField, value) != true)) {
                    this.IdPatientMisField = value;
                    this.RaisePropertyChanged("IdPatientMis");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalStaff", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto")]
    [System.SerializableAttribute()]
    public partial class MedicalStaff : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.PersonWithIdentity PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdLpuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort IdSpecialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort IdPositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.PersonWithIdentity Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string IdLpu {
            get {
                return this.IdLpuField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLpuField, value) != true)) {
                    this.IdLpuField = value;
                    this.RaisePropertyChanged("IdLpu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public ushort IdSpeciality {
            get {
                return this.IdSpecialityField;
            }
            set {
                if ((this.IdSpecialityField.Equals(value) != true)) {
                    this.IdSpecialityField = value;
                    this.RaisePropertyChanged("IdSpeciality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public ushort IdPosition {
            get {
                return this.IdPositionField;
            }
            set {
                if ((this.IdPositionField.Equals(value) != true)) {
                    this.IdPositionField = value;
                    this.RaisePropertyChanged("IdPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Participant", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto")]
    [System.SerializableAttribute()]
    public partial class Participant : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedicalStaff DoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.MedicalStaff Doctor {
            get {
                return this.DoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorField, value) != true)) {
                    this.DoctorField = value;
                    this.RaisePropertyChanged("Doctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdRole {
            get {
                return this.IdRoleField;
            }
            set {
                if ((this.IdRoleField.Equals(value) != true)) {
                    this.IdRoleField = value;
                    this.RaisePropertyChanged("IdRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Guardian", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto")]
    [System.SerializableAttribute()]
    public partial class Guardian : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.PersonWithIdentity PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdRelationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnderlyingDocumentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.PersonWithIdentity Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public byte IdRelationType {
            get {
                return this.IdRelationTypeField;
            }
            set {
                if ((this.IdRelationTypeField.Equals(value) != true)) {
                    this.IdRelationTypeField = value;
                    this.RaisePropertyChanged("IdRelationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string UnderlyingDocument {
            get {
                return this.UnderlyingDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.UnderlyingDocumentField, value) != true)) {
                    this.UnderlyingDocumentField = value;
                    this.RaisePropertyChanged("UnderlyingDocument");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseStat", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Case")]
    [System.SerializableAttribute()]
    public partial class CaseStat : PixServiseTests.EMKServise.CaseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdIntoxicationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdPatientConditionOnAdmissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdTypeFromDiseaseStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdRepetitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte HospitalizationOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdTransportInternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.StepStat[] StepsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte HospResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedRecord[] MedRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdHospChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RW1MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AIDSMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PrehospitalDefectsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryCode {
            get {
                return this.DeliveryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryCodeField, value) != true)) {
                    this.DeliveryCodeField = value;
                    this.RaisePropertyChanged("DeliveryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdIntoxicationType {
            get {
                return this.IdIntoxicationTypeField;
            }
            set {
                if ((this.IdIntoxicationTypeField.Equals(value) != true)) {
                    this.IdIntoxicationTypeField = value;
                    this.RaisePropertyChanged("IdIntoxicationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdPatientConditionOnAdmission {
            get {
                return this.IdPatientConditionOnAdmissionField;
            }
            set {
                if ((this.IdPatientConditionOnAdmissionField.Equals(value) != true)) {
                    this.IdPatientConditionOnAdmissionField = value;
                    this.RaisePropertyChanged("IdPatientConditionOnAdmission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdTypeFromDiseaseStart {
            get {
                return this.IdTypeFromDiseaseStartField;
            }
            set {
                if ((this.IdTypeFromDiseaseStartField.Equals(value) != true)) {
                    this.IdTypeFromDiseaseStartField = value;
                    this.RaisePropertyChanged("IdTypeFromDiseaseStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public byte IdRepetition {
            get {
                return this.IdRepetitionField;
            }
            set {
                if ((this.IdRepetitionField.Equals(value) != true)) {
                    this.IdRepetitionField = value;
                    this.RaisePropertyChanged("IdRepetition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public byte HospitalizationOrder {
            get {
                return this.HospitalizationOrderField;
            }
            set {
                if ((this.HospitalizationOrderField.Equals(value) != true)) {
                    this.HospitalizationOrderField = value;
                    this.RaisePropertyChanged("HospitalizationOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public byte IdTransportIntern {
            get {
                return this.IdTransportInternField;
            }
            set {
                if ((this.IdTransportInternField.Equals(value) != true)) {
                    this.IdTransportInternField = value;
                    this.RaisePropertyChanged("IdTransportIntern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public PixServiseTests.EMKServise.StepStat[] Steps {
            get {
                return this.StepsField;
            }
            set {
                if ((object.ReferenceEquals(this.StepsField, value) != true)) {
                    this.StepsField = value;
                    this.RaisePropertyChanged("Steps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public byte HospResult {
            get {
                return this.HospResultField;
            }
            set {
                if ((this.HospResultField.Equals(value) != true)) {
                    this.HospResultField = value;
                    this.RaisePropertyChanged("HospResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public PixServiseTests.EMKServise.MedRecord[] MedRecords {
            get {
                return this.MedRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.MedRecordsField, value) != true)) {
                    this.MedRecordsField = value;
                    this.RaisePropertyChanged("MedRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public byte IdHospChannel {
            get {
                return this.IdHospChannelField;
            }
            set {
                if ((this.IdHospChannelField.Equals(value) != true)) {
                    this.IdHospChannelField = value;
                    this.RaisePropertyChanged("IdHospChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public bool RW1Mark {
            get {
                return this.RW1MarkField;
            }
            set {
                if ((this.RW1MarkField.Equals(value) != true)) {
                    this.RW1MarkField = value;
                    this.RaisePropertyChanged("RW1Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public bool AIDSMark {
            get {
                return this.AIDSMarkField;
            }
            set {
                if ((this.AIDSMarkField.Equals(value) != true)) {
                    this.AIDSMarkField = value;
                    this.RaisePropertyChanged("AIDSMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public byte[] PrehospitalDefects {
            get {
                return this.PrehospitalDefectsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrehospitalDefectsField, value) != true)) {
                    this.PrehospitalDefectsField = value;
                    this.RaisePropertyChanged("PrehospitalDefects");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAmb", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Case")]
    [System.SerializableAttribute()]
    public partial class CaseAmb : PixServiseTests.EMKServise.CaseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdCasePurposeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdCaseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdAmbResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.StepAmb[] StepsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedRecord[] MedRecordsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdCasePurpose {
            get {
                return this.IdCasePurposeField;
            }
            set {
                if ((this.IdCasePurposeField.Equals(value) != true)) {
                    this.IdCasePurposeField = value;
                    this.RaisePropertyChanged("IdCasePurpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdCaseType {
            get {
                return this.IdCaseTypeField;
            }
            set {
                if ((this.IdCaseTypeField.Equals(value) != true)) {
                    this.IdCaseTypeField = value;
                    this.RaisePropertyChanged("IdCaseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public byte IdAmbResult {
            get {
                return this.IdAmbResultField;
            }
            set {
                if ((this.IdAmbResultField.Equals(value) != true)) {
                    this.IdAmbResultField = value;
                    this.RaisePropertyChanged("IdAmbResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public PixServiseTests.EMKServise.StepAmb[] Steps {
            get {
                return this.StepsField;
            }
            set {
                if ((object.ReferenceEquals(this.StepsField, value) != true)) {
                    this.StepsField = value;
                    this.RaisePropertyChanged("Steps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public PixServiseTests.EMKServise.MedRecord[] MedRecords {
            get {
                return this.MedRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.MedRecordsField, value) != true)) {
                    this.MedRecordsField = value;
                    this.RaisePropertyChanged("MedRecords");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonWithIdentity", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto")]
    [System.SerializableAttribute()]
    public partial class PersonWithIdentity : PixServiseTests.EMKServise.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.IdentityDocument[] DocumentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.IdentityDocument[] Documents {
            get {
                return this.DocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentsField, value) != true)) {
                    this.DocumentsField = value;
                    this.RaisePropertyChanged("Documents");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.PersonWithIdentity))]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.HumanName HumanNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdPersonMisField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.HumanName HumanName {
            get {
                return this.HumanNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HumanNameField, value) != true)) {
                    this.HumanNameField = value;
                    this.RaisePropertyChanged("HumanName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime Birthdate {
            get {
                return this.BirthdateField;
            }
            set {
                if ((this.BirthdateField.Equals(value) != true)) {
                    this.BirthdateField = value;
                    this.RaisePropertyChanged("Birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string IdPersonMis {
            get {
                return this.IdPersonMisField;
            }
            set {
                if ((object.ReferenceEquals(this.IdPersonMisField, value) != true)) {
                    this.IdPersonMisField = value;
                    this.RaisePropertyChanged("IdPersonMis");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HumanName", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto")]
    [System.SerializableAttribute()]
    public partial class HumanName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GivenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GivenName {
            get {
                return this.GivenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNameField, value) != true)) {
                    this.GivenNameField = value;
                    this.RaisePropertyChanged("GivenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentityDocument", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto")]
    [System.SerializableAttribute()]
    public partial class IdentityDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpiredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdDocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IssuedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocN {
            get {
                return this.DocNField;
            }
            set {
                if ((object.ReferenceEquals(this.DocNField, value) != true)) {
                    this.DocNField = value;
                    this.RaisePropertyChanged("DocN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocS {
            get {
                return this.DocSField;
            }
            set {
                if ((object.ReferenceEquals(this.DocSField, value) != true)) {
                    this.DocSField = value;
                    this.RaisePropertyChanged("DocS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpiredDate {
            get {
                return this.ExpiredDateField;
            }
            set {
                if ((this.ExpiredDateField.Equals(value) != true)) {
                    this.ExpiredDateField = value;
                    this.RaisePropertyChanged("ExpiredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdDocumentType {
            get {
                return this.IdDocumentTypeField;
            }
            set {
                if ((this.IdDocumentTypeField.Equals(value) != true)) {
                    this.IdDocumentTypeField = value;
                    this.RaisePropertyChanged("IdDocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdProvider {
            get {
                return this.IdProviderField;
            }
            set {
                if ((this.IdProviderField.Equals(value) != true)) {
                    this.IdProviderField = value;
                    this.RaisePropertyChanged("IdProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IssuedDate {
            get {
                return this.IssuedDateField;
            }
            set {
                if ((this.IssuedDateField.Equals(value) != true)) {
                    this.IssuedDateField = value;
                    this.RaisePropertyChanged("IssuedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderName {
            get {
                return this.ProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderNameField, value) != true)) {
                    this.ProviderNameField = value;
                    this.RaisePropertyChanged("ProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionCode {
            get {
                return this.RegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionCodeField, value) != true)) {
                    this.RegionCodeField = value;
                    this.RaisePropertyChanged("RegionCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StepStat", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Step")]
    [System.SerializableAttribute()]
    public partial class StepStat : PixServiseTests.EMKServise.StepBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalDepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdHospitalDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdRegimenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BedNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte BedProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort DaySpendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedRecord[] MedRecordsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HospitalDepartmentName {
            get {
                return this.HospitalDepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalDepartmentNameField, value) != true)) {
                    this.HospitalDepartmentNameField = value;
                    this.RaisePropertyChanged("HospitalDepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdHospitalDepartment {
            get {
                return this.IdHospitalDepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.IdHospitalDepartmentField, value) != true)) {
                    this.IdHospitalDepartmentField = value;
                    this.RaisePropertyChanged("IdHospitalDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdRegimen {
            get {
                return this.IdRegimenField;
            }
            set {
                if ((this.IdRegimenField.Equals(value) != true)) {
                    this.IdRegimenField = value;
                    this.RaisePropertyChanged("IdRegimen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WardNumber {
            get {
                return this.WardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.WardNumberField, value) != true)) {
                    this.WardNumberField = value;
                    this.RaisePropertyChanged("WardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string BedNumber {
            get {
                return this.BedNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BedNumberField, value) != true)) {
                    this.BedNumberField = value;
                    this.RaisePropertyChanged("BedNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public byte BedProfile {
            get {
                return this.BedProfileField;
            }
            set {
                if ((this.BedProfileField.Equals(value) != true)) {
                    this.BedProfileField = value;
                    this.RaisePropertyChanged("BedProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public ushort DaySpend {
            get {
                return this.DaySpendField;
            }
            set {
                if ((this.DaySpendField.Equals(value) != true)) {
                    this.DaySpendField = value;
                    this.RaisePropertyChanged("DaySpend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public PixServiseTests.EMKServise.MedRecord[] MedRecords {
            get {
                return this.MedRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.MedRecordsField, value) != true)) {
                    this.MedRecordsField = value;
                    this.RaisePropertyChanged("MedRecords");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedRecord", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.MedDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.DischargeSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.DispensaryBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.DispensaryOne))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.Referral))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.LaboratoryReport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.ConsultNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.SickList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.DeathInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.Service))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.TfomsInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.AppointedMedication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.Diagnosis))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.ClinicMainDiagnosis))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.AnatomopathologicalClinicMainDiagnosis))]
    public partial class MedRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StepBase", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Step")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.StepAmb))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.StepStat))]
    public partial class StepBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdPaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedicalStaff DoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdStepMisField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateStart {
            get {
                return this.DateStartField;
            }
            set {
                if ((this.DateStartField.Equals(value) != true)) {
                    this.DateStartField = value;
                    this.RaisePropertyChanged("DateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime DateEnd {
            get {
                return this.DateEndField;
            }
            set {
                if ((this.DateEndField.Equals(value) != true)) {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public byte IdPaymentType {
            get {
                return this.IdPaymentTypeField;
            }
            set {
                if ((this.IdPaymentTypeField.Equals(value) != true)) {
                    this.IdPaymentTypeField = value;
                    this.RaisePropertyChanged("IdPaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public PixServiseTests.EMKServise.MedicalStaff Doctor {
            get {
                return this.DoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorField, value) != true)) {
                    this.DoctorField = value;
                    this.RaisePropertyChanged("Doctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string IdStepMis {
            get {
                return this.IdStepMisField;
            }
            set {
                if ((object.ReferenceEquals(this.IdStepMisField, value) != true)) {
                    this.IdStepMisField = value;
                    this.RaisePropertyChanged("IdStepMis");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StepAmb", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Step")]
    [System.SerializableAttribute()]
    public partial class StepAmb : PixServiseTests.EMKServise.StepBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdVisitPlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdVisitPurposeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedRecord[] MedRecordsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdVisitPlace {
            get {
                return this.IdVisitPlaceField;
            }
            set {
                if ((this.IdVisitPlaceField.Equals(value) != true)) {
                    this.IdVisitPlaceField = value;
                    this.RaisePropertyChanged("IdVisitPlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdVisitPurpose {
            get {
                return this.IdVisitPurposeField;
            }
            set {
                if ((this.IdVisitPurposeField.Equals(value) != true)) {
                    this.IdVisitPurposeField = value;
                    this.RaisePropertyChanged("IdVisitPurpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.MedRecord[] MedRecords {
            get {
                return this.MedRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.MedRecordsField, value) != true)) {
                    this.MedRecordsField = value;
                    this.RaisePropertyChanged("MedRecords");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedDocument", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.DischargeSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.DispensaryBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.DispensaryOne))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.Referral))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.LaboratoryReport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.ConsultNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.SickList))]
    public partial class MedDocument : PixServiseTests.EMKServise.MedRecord {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedDocument.DocumentAttachment AttachmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedicalStaff AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public PixServiseTests.EMKServise.MedDocument.DocumentAttachment Attachment {
            get {
                return this.AttachmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentField, value) != true)) {
                    this.AttachmentField = value;
                    this.RaisePropertyChanged("Attachment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public PixServiseTests.EMKServise.MedicalStaff Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="MedDocument.DocumentAttachment", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
        [System.SerializableAttribute()]
        public partial class DocumentAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte[] DataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte[] HashField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string MimeTypeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Uri UrlField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte[] Data {
                get {
                    return this.DataField;
                }
                set {
                    if ((object.ReferenceEquals(this.DataField, value) != true)) {
                        this.DataField = value;
                        this.RaisePropertyChanged("Data");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte[] Hash {
                get {
                    return this.HashField;
                }
                set {
                    if ((object.ReferenceEquals(this.HashField, value) != true)) {
                        this.HashField = value;
                        this.RaisePropertyChanged("Hash");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string MimeType {
                get {
                    return this.MimeTypeField;
                }
                set {
                    if ((object.ReferenceEquals(this.MimeTypeField, value) != true)) {
                        this.MimeTypeField = value;
                        this.RaisePropertyChanged("MimeType");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Uri Url {
                get {
                    return this.UrlField;
                }
                set {
                    if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                        this.UrlField = value;
                        this.RaisePropertyChanged("Url");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DischargeSummary", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    public partial class DischargeSummary : PixServiseTests.EMKServise.MedDocument {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DispensaryBase", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.DispensaryOne))]
    public partial class DispensaryBase : PixServiseTests.EMKServise.MedDocument {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DispensaryOne", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    public partial class DispensaryOne : PixServiseTests.EMKServise.DispensaryBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGuestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasExtraResearchRefferalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUnderObservationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasExpertCareRefferalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPrescribeCureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasHealthResortRefferalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSecondStageRefferalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.HealthGroup HealthGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.Recommendation[] RecommendationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGuested {
            get {
                return this.IsGuestedField;
            }
            set {
                if ((this.IsGuestedField.Equals(value) != true)) {
                    this.IsGuestedField = value;
                    this.RaisePropertyChanged("IsGuested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool HasExtraResearchRefferal {
            get {
                return this.HasExtraResearchRefferalField;
            }
            set {
                if ((this.HasExtraResearchRefferalField.Equals(value) != true)) {
                    this.HasExtraResearchRefferalField = value;
                    this.RaisePropertyChanged("HasExtraResearchRefferal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool IsUnderObservation {
            get {
                return this.IsUnderObservationField;
            }
            set {
                if ((this.IsUnderObservationField.Equals(value) != true)) {
                    this.IsUnderObservationField = value;
                    this.RaisePropertyChanged("IsUnderObservation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool HasExpertCareRefferal {
            get {
                return this.HasExpertCareRefferalField;
            }
            set {
                if ((this.HasExpertCareRefferalField.Equals(value) != true)) {
                    this.HasExpertCareRefferalField = value;
                    this.RaisePropertyChanged("HasExpertCareRefferal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool HasPrescribeCure {
            get {
                return this.HasPrescribeCureField;
            }
            set {
                if ((this.HasPrescribeCureField.Equals(value) != true)) {
                    this.HasPrescribeCureField = value;
                    this.RaisePropertyChanged("HasPrescribeCure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool HasHealthResortRefferal {
            get {
                return this.HasHealthResortRefferalField;
            }
            set {
                if ((this.HasHealthResortRefferalField.Equals(value) != true)) {
                    this.HasHealthResortRefferalField = value;
                    this.RaisePropertyChanged("HasHealthResortRefferal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool HasSecondStageRefferal {
            get {
                return this.HasSecondStageRefferalField;
            }
            set {
                if ((this.HasSecondStageRefferalField.Equals(value) != true)) {
                    this.HasSecondStageRefferalField = value;
                    this.RaisePropertyChanged("HasSecondStageRefferal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public PixServiseTests.EMKServise.HealthGroup HealthGroup {
            get {
                return this.HealthGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthGroupField, value) != true)) {
                    this.HealthGroupField = value;
                    this.RaisePropertyChanged("HealthGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public PixServiseTests.EMKServise.Recommendation[] Recommendations {
            get {
                return this.RecommendationsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecommendationsField, value) != true)) {
                    this.RecommendationsField = value;
                    this.RaisePropertyChanged("Recommendations");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Referral", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    public partial class Referral : PixServiseTests.EMKServise.MedDocument {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.ReferralInfo ReferralInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedicalStaff DepartmentHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdSourceLpuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdTargetLpuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.ReferralInfo ReferralInfo {
            get {
                return this.ReferralInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferralInfoField, value) != true)) {
                    this.ReferralInfoField = value;
                    this.RaisePropertyChanged("ReferralInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public PixServiseTests.EMKServise.MedicalStaff DepartmentHead {
            get {
                return this.DepartmentHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentHeadField, value) != true)) {
                    this.DepartmentHeadField = value;
                    this.RaisePropertyChanged("DepartmentHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string IdSourceLpu {
            get {
                return this.IdSourceLpuField;
            }
            set {
                if ((object.ReferenceEquals(this.IdSourceLpuField, value) != true)) {
                    this.IdSourceLpuField = value;
                    this.RaisePropertyChanged("IdSourceLpu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string IdTargetLpu {
            get {
                return this.IdTargetLpuField;
            }
            set {
                if ((object.ReferenceEquals(this.IdTargetLpuField, value) != true)) {
                    this.IdTargetLpuField = value;
                    this.RaisePropertyChanged("IdTargetLpu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string ReferralID {
            get {
                return this.ReferralIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferralIDField, value) != true)) {
                    this.ReferralIDField = value;
                    this.RaisePropertyChanged("ReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string RelatedID {
            get {
                return this.RelatedIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedIDField, value) != true)) {
                    this.RelatedIDField = value;
                    this.RaisePropertyChanged("RelatedID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LaboratoryReport", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    public partial class LaboratoryReport : PixServiseTests.EMKServise.MedDocument {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsultNote", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    public partial class ConsultNote : PixServiseTests.EMKServise.MedDocument {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SickList", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    public partial class SickList : PixServiseTests.EMKServise.MedDocument {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.SickListInfo SickListInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.SickListInfo SickListInfo {
            get {
                return this.SickListInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.SickListInfoField, value) != true)) {
                    this.SickListInfoField = value;
                    this.RaisePropertyChanged("SickListInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeathInfo", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec")]
    [System.SerializableAttribute()]
    public partial class DeathInfo : PixServiseTests.EMKServise.MedRecord {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MkbCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MkbCode {
            get {
                return this.MkbCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MkbCodeField, value) != true)) {
                    this.MkbCodeField = value;
                    this.RaisePropertyChanged("MkbCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec")]
    [System.SerializableAttribute()]
    public partial class Service : PixServiseTests.EMKServise.MedRecord {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.PaymentInfo PaymentInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.Participant PerformerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateEnd {
            get {
                return this.DateEndField;
            }
            set {
                if ((this.DateEndField.Equals(value) != true)) {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateStart {
            get {
                return this.DateStartField;
            }
            set {
                if ((this.DateStartField.Equals(value) != true)) {
                    this.DateStartField = value;
                    this.RaisePropertyChanged("DateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdServiceType {
            get {
                return this.IdServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IdServiceTypeField, value) != true)) {
                    this.IdServiceTypeField = value;
                    this.RaisePropertyChanged("IdServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.PaymentInfo PaymentInfo {
            get {
                return this.PaymentInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentInfoField, value) != true)) {
                    this.PaymentInfoField = value;
                    this.RaisePropertyChanged("PaymentInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.Participant Performer {
            get {
                return this.PerformerField;
            }
            set {
                if ((object.ReferenceEquals(this.PerformerField, value) != true)) {
                    this.PerformerField = value;
                    this.RaisePropertyChanged("Performer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TfomsInfo", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec")]
    [System.SerializableAttribute()]
    public partial class TfomsInfo : PixServiseTests.EMKServise.MedRecord {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdTfomsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TariffField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdTfomsType {
            get {
                return this.IdTfomsTypeField;
            }
            set {
                if ((this.IdTfomsTypeField.Equals(value) != true)) {
                    this.IdTfomsTypeField = value;
                    this.RaisePropertyChanged("IdTfomsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tariff {
            get {
                return this.TariffField;
            }
            set {
                if ((this.TariffField.Equals(value) != true)) {
                    this.TariffField = value;
                    this.RaisePropertyChanged("Tariff");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointedMedication", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec")]
    [System.SerializableAttribute()]
    public partial class AppointedMedication : PixServiseTests.EMKServise.MedRecord {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnatomicTherapeuticChemicalClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.Quantity CourseDoseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.Quantity DayDoseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort DaysCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedicalStaff DoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssuedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicineIssueTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort MedicineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MedicineUseWayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.Quantity OneTimeDoseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnatomicTherapeuticChemicalClassification {
            get {
                return this.AnatomicTherapeuticChemicalClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.AnatomicTherapeuticChemicalClassificationField, value) != true)) {
                    this.AnatomicTherapeuticChemicalClassificationField = value;
                    this.RaisePropertyChanged("AnatomicTherapeuticChemicalClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.Quantity CourseDose {
            get {
                return this.CourseDoseField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseDoseField, value) != true)) {
                    this.CourseDoseField = value;
                    this.RaisePropertyChanged("CourseDose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.Quantity DayDose {
            get {
                return this.DayDoseField;
            }
            set {
                if ((object.ReferenceEquals(this.DayDoseField, value) != true)) {
                    this.DayDoseField = value;
                    this.RaisePropertyChanged("DayDose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort DaysCount {
            get {
                return this.DaysCountField;
            }
            set {
                if ((this.DaysCountField.Equals(value) != true)) {
                    this.DaysCountField = value;
                    this.RaisePropertyChanged("DaysCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.MedicalStaff Doctor {
            get {
                return this.DoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorField, value) != true)) {
                    this.DoctorField = value;
                    this.RaisePropertyChanged("Doctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssuedDate {
            get {
                return this.IssuedDateField;
            }
            set {
                if ((this.IssuedDateField.Equals(value) != true)) {
                    this.IssuedDateField = value;
                    this.RaisePropertyChanged("IssuedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicineIssueType {
            get {
                return this.MedicineIssueTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineIssueTypeField, value) != true)) {
                    this.MedicineIssueTypeField = value;
                    this.RaisePropertyChanged("MedicineIssueType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicineName {
            get {
                return this.MedicineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineNameField, value) != true)) {
                    this.MedicineNameField = value;
                    this.RaisePropertyChanged("MedicineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort MedicineType {
            get {
                return this.MedicineTypeField;
            }
            set {
                if ((this.MedicineTypeField.Equals(value) != true)) {
                    this.MedicineTypeField = value;
                    this.RaisePropertyChanged("MedicineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MedicineUseWay {
            get {
                return this.MedicineUseWayField;
            }
            set {
                if ((this.MedicineUseWayField.Equals(value) != true)) {
                    this.MedicineUseWayField = value;
                    this.RaisePropertyChanged("MedicineUseWay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.Quantity OneTimeDose {
            get {
                return this.OneTimeDoseField;
            }
            set {
                if ((object.ReferenceEquals(this.OneTimeDoseField, value) != true)) {
                    this.OneTimeDoseField = value;
                    this.RaisePropertyChanged("OneTimeDose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Seria {
            get {
                return this.SeriaField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriaField, value) != true)) {
                    this.SeriaField = value;
                    this.RaisePropertyChanged("Seria");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Diagnosis", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.Diag")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.ClinicMainDiagnosis))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.AnatomopathologicalClinicMainDiagnosis))]
    public partial class Diagnosis : PixServiseTests.EMKServise.MedRecord {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.DiagnosisInfo DiagnosisInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedicalStaff DoctorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.DiagnosisInfo DiagnosisInfo {
            get {
                return this.DiagnosisInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisInfoField, value) != true)) {
                    this.DiagnosisInfoField = value;
                    this.RaisePropertyChanged("DiagnosisInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.MedicalStaff Doctor {
            get {
                return this.DoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorField, value) != true)) {
                    this.DoctorField = value;
                    this.RaisePropertyChanged("Doctor");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClinicMainDiagnosis", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.Diag")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.AnatomopathologicalClinicMainDiagnosis))]
    public partial class ClinicMainDiagnosis : PixServiseTests.EMKServise.Diagnosis {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.Diagnosis[] ComplicationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.Diagnosis[] Complications {
            get {
                return this.ComplicationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplicationsField, value) != true)) {
                    this.ComplicationsField = value;
                    this.RaisePropertyChanged("Complications");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnatomopathologicalClinicMainDiagnosis", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.Diag")]
    [System.SerializableAttribute()]
    public partial class AnatomopathologicalClinicMainDiagnosis : PixServiseTests.EMKServise.ClinicMainDiagnosis {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HealthGroup", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    public partial class HealthGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedicalStaff DoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.HealthGroupInfo HealthGroupInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.MedicalStaff Doctor {
            get {
                return this.DoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorField, value) != true)) {
                    this.DoctorField = value;
                    this.RaisePropertyChanged("Doctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.HealthGroupInfo HealthGroupInfo {
            get {
                return this.HealthGroupInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthGroupInfoField, value) != true)) {
                    this.HealthGroupInfoField = value;
                    this.RaisePropertyChanged("HealthGroupInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Recommendation", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    public partial class Recommendation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.MedicalStaff DoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.MedicalStaff Doctor {
            get {
                return this.DoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorField, value) != true)) {
                    this.DoctorField = value;
                    this.RaisePropertyChanged("Doctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HealthGroupInfo", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    public partial class HealthGroupInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdHealthGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdHealthGroup {
            get {
                return this.IdHealthGroupField;
            }
            set {
                if ((this.IdHealthGroupField.Equals(value) != true)) {
                    this.IdHealthGroupField = value;
                    this.RaisePropertyChanged("IdHealthGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReferralInfo", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    public partial class ReferralInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdReferralMisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdReferralTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssuedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte HospitalizationOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MkbCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string IdReferralMis {
            get {
                return this.IdReferralMisField;
            }
            set {
                if ((object.ReferenceEquals(this.IdReferralMisField, value) != true)) {
                    this.IdReferralMisField = value;
                    this.RaisePropertyChanged("IdReferralMis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public byte IdReferralType {
            get {
                return this.IdReferralTypeField;
            }
            set {
                if ((this.IdReferralTypeField.Equals(value) != true)) {
                    this.IdReferralTypeField = value;
                    this.RaisePropertyChanged("IdReferralType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime IssuedDateTime {
            get {
                return this.IssuedDateTimeField;
            }
            set {
                if ((this.IssuedDateTimeField.Equals(value) != true)) {
                    this.IssuedDateTimeField = value;
                    this.RaisePropertyChanged("IssuedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public byte HospitalizationOrder {
            get {
                return this.HospitalizationOrderField;
            }
            set {
                if ((this.HospitalizationOrderField.Equals(value) != true)) {
                    this.HospitalizationOrderField = value;
                    this.RaisePropertyChanged("HospitalizationOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string MkbCode {
            get {
                return this.MkbCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MkbCodeField, value) != true)) {
                    this.MkbCodeField = value;
                    this.RaisePropertyChanged("MkbCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SickListInfo", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.MedDoc")]
    [System.SerializableAttribute()]
    public partial class SickListInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.Guardian CaregiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DisabilityDocReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DisabilityDocStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPatientTakerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime DateStart {
            get {
                return this.DateStartField;
            }
            set {
                if ((this.DateStartField.Equals(value) != true)) {
                    this.DateStartField = value;
                    this.RaisePropertyChanged("DateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public PixServiseTests.EMKServise.Guardian Caregiver {
            get {
                return this.CaregiverField;
            }
            set {
                if ((object.ReferenceEquals(this.CaregiverField, value) != true)) {
                    this.CaregiverField = value;
                    this.RaisePropertyChanged("Caregiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime DateEnd {
            get {
                return this.DateEndField;
            }
            set {
                if ((this.DateEndField.Equals(value) != true)) {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public byte DisabilityDocReason {
            get {
                return this.DisabilityDocReasonField;
            }
            set {
                if ((this.DisabilityDocReasonField.Equals(value) != true)) {
                    this.DisabilityDocReasonField = value;
                    this.RaisePropertyChanged("DisabilityDocReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public byte DisabilityDocState {
            get {
                return this.DisabilityDocStateField;
            }
            set {
                if ((this.DisabilityDocStateField.Equals(value) != true)) {
                    this.DisabilityDocStateField = value;
                    this.RaisePropertyChanged("DisabilityDocState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsPatientTaker {
            get {
                return this.IsPatientTakerField;
            }
            set {
                if ((this.IsPatientTakerField.Equals(value) != true)) {
                    this.IsPatientTakerField = value;
                    this.RaisePropertyChanged("IsPatientTaker");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentInfo", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec")]
    [System.SerializableAttribute()]
    public partial class PaymentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte HealthCareUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> IdPaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte PaymentStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TariffField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte HealthCareUnit {
            get {
                return this.HealthCareUnitField;
            }
            set {
                if ((this.HealthCareUnitField.Equals(value) != true)) {
                    this.HealthCareUnitField = value;
                    this.RaisePropertyChanged("HealthCareUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> IdPaymentType {
            get {
                return this.IdPaymentTypeField;
            }
            set {
                if ((this.IdPaymentTypeField.Equals(value) != true)) {
                    this.IdPaymentTypeField = value;
                    this.RaisePropertyChanged("IdPaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte PaymentState {
            get {
                return this.PaymentStateField;
            }
            set {
                if ((this.PaymentStateField.Equals(value) != true)) {
                    this.PaymentStateField = value;
                    this.RaisePropertyChanged("PaymentState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tariff {
            get {
                return this.TariffField;
            }
            set {
                if ((this.TariffField.Equals(value) != true)) {
                    this.TariffField = value;
                    this.RaisePropertyChanged("Tariff");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Quantity", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto")]
    [System.SerializableAttribute()]
    public partial class Quantity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUnit {
            get {
                return this.IdUnitField;
            }
            set {
                if ((this.IdUnitField.Equals(value) != true)) {
                    this.IdUnitField = value;
                    this.RaisePropertyChanged("IdUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiagnosisInfo", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.MedRec.Diag")]
    [System.SerializableAttribute()]
    public partial class DiagnosisInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdDiseaseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DiagnosedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdDiagnosisTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DiagnosisChangeReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DiagnosisStageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdDispensaryStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdTraumaTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MESImplementationFeatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MedicalStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MkbCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdDiseaseType {
            get {
                return this.IdDiseaseTypeField;
            }
            set {
                if ((this.IdDiseaseTypeField.Equals(value) != true)) {
                    this.IdDiseaseTypeField = value;
                    this.RaisePropertyChanged("IdDiseaseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime DiagnosedDate {
            get {
                return this.DiagnosedDateField;
            }
            set {
                if ((this.DiagnosedDateField.Equals(value) != true)) {
                    this.DiagnosedDateField = value;
                    this.RaisePropertyChanged("DiagnosedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public byte IdDiagnosisType {
            get {
                return this.IdDiagnosisTypeField;
            }
            set {
                if ((this.IdDiagnosisTypeField.Equals(value) != true)) {
                    this.IdDiagnosisTypeField = value;
                    this.RaisePropertyChanged("IdDiagnosisType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public byte DiagnosisChangeReason {
            get {
                return this.DiagnosisChangeReasonField;
            }
            set {
                if ((this.DiagnosisChangeReasonField.Equals(value) != true)) {
                    this.DiagnosisChangeReasonField = value;
                    this.RaisePropertyChanged("DiagnosisChangeReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public byte DiagnosisStage {
            get {
                return this.DiagnosisStageField;
            }
            set {
                if ((this.DiagnosisStageField.Equals(value) != true)) {
                    this.DiagnosisStageField = value;
                    this.RaisePropertyChanged("DiagnosisStage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public byte IdDispensaryState {
            get {
                return this.IdDispensaryStateField;
            }
            set {
                if ((this.IdDispensaryStateField.Equals(value) != true)) {
                    this.IdDispensaryStateField = value;
                    this.RaisePropertyChanged("IdDispensaryState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public byte IdTraumaType {
            get {
                return this.IdTraumaTypeField;
            }
            set {
                if ((this.IdTraumaTypeField.Equals(value) != true)) {
                    this.IdTraumaTypeField = value;
                    this.RaisePropertyChanged("IdTraumaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public byte MESImplementationFeature {
            get {
                return this.MESImplementationFeatureField;
            }
            set {
                if ((this.MESImplementationFeatureField.Equals(value) != true)) {
                    this.MESImplementationFeatureField = value;
                    this.RaisePropertyChanged("MESImplementationFeature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public short MedicalStandard {
            get {
                return this.MedicalStandardField;
            }
            set {
                if ((this.MedicalStandardField.Equals(value) != true)) {
                    this.MedicalStandardField = value;
                    this.RaisePropertyChanged("MedicalStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string MkbCode {
            get {
                return this.MkbCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MkbCodeField, value) != true)) {
                    this.MkbCodeField = value;
                    this.RaisePropertyChanged("MkbCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
    [System.SerializableAttribute()]
    public partial class RequestFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.RequestFault[] ErrorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public PixServiseTests.EMKServise.RequestFault[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReferralTupleDto", Namespace="http://schemas.datacontract.org/2004/07/EMKService.Data.ReferralList")]
    [System.SerializableAttribute()]
    public partial class ReferralTupleDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.PatientMinDto PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.ReferralDto[] ReferralsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.PatientMinDto Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.ReferralDto[] Referrals {
            get {
                return this.ReferralsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferralsField, value) != true)) {
                    this.ReferralsField = value;
                    this.RaisePropertyChanged("Referrals");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientMinDto", Namespace="http://schemas.datacontract.org/2004/07/EMKService.Data.ReferralList")]
    [System.SerializableAttribute()]
    public partial class PatientMinDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.AddressDto[] AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.DocumentDto[] DocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GivenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdPrivilegeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PixServiseTests.EMKServise.JobDto JobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.AddressDto[] Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.DocumentDto[] Documents {
            get {
                return this.DocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentsField, value) != true)) {
                    this.DocumentsField = value;
                    this.RaisePropertyChanged("Documents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GivenName {
            get {
                return this.GivenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNameField, value) != true)) {
                    this.GivenNameField = value;
                    this.RaisePropertyChanged("GivenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdPrivilegeType {
            get {
                return this.IdPrivilegeTypeField;
            }
            set {
                if ((this.IdPrivilegeTypeField.Equals(value) != true)) {
                    this.IdPrivilegeTypeField = value;
                    this.RaisePropertyChanged("IdPrivilegeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PixServiseTests.EMKServise.JobDto Job {
            get {
                return this.JobField;
            }
            set {
                if ((object.ReferenceEquals(this.JobField, value) != true)) {
                    this.JobField = value;
                    this.RaisePropertyChanged("Job");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReferralDto", Namespace="http://schemas.datacontract.org/2004/07/EMKService.Data.Dto")]
    [System.SerializableAttribute()]
    public partial class ReferralDto : PixServiseTests.EMKServise.MedRecordDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdDoctorRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdRefDepartmentHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdReferralMisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdReferralTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdSourceLpuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdTargetLpuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdUrgencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssuedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MkbCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdDoctorRef {
            get {
                return this.IdDoctorRefField;
            }
            set {
                if ((object.ReferenceEquals(this.IdDoctorRefField, value) != true)) {
                    this.IdDoctorRefField = value;
                    this.RaisePropertyChanged("IdDoctorRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdRefDepartmentHead {
            get {
                return this.IdRefDepartmentHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.IdRefDepartmentHeadField, value) != true)) {
                    this.IdRefDepartmentHeadField = value;
                    this.RaisePropertyChanged("IdRefDepartmentHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdReferralMis {
            get {
                return this.IdReferralMisField;
            }
            set {
                if ((object.ReferenceEquals(this.IdReferralMisField, value) != true)) {
                    this.IdReferralMisField = value;
                    this.RaisePropertyChanged("IdReferralMis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdReferralType {
            get {
                return this.IdReferralTypeField;
            }
            set {
                if ((this.IdReferralTypeField.Equals(value) != true)) {
                    this.IdReferralTypeField = value;
                    this.RaisePropertyChanged("IdReferralType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdSourceLpu {
            get {
                return this.IdSourceLpuField;
            }
            set {
                if ((object.ReferenceEquals(this.IdSourceLpuField, value) != true)) {
                    this.IdSourceLpuField = value;
                    this.RaisePropertyChanged("IdSourceLpu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdTargetLpu {
            get {
                return this.IdTargetLpuField;
            }
            set {
                if ((object.ReferenceEquals(this.IdTargetLpuField, value) != true)) {
                    this.IdTargetLpuField = value;
                    this.RaisePropertyChanged("IdTargetLpu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdUrgencyType {
            get {
                return this.IdUrgencyTypeField;
            }
            set {
                if ((this.IdUrgencyTypeField.Equals(value) != true)) {
                    this.IdUrgencyTypeField = value;
                    this.RaisePropertyChanged("IdUrgencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssuedDateTime {
            get {
                return this.IssuedDateTimeField;
            }
            set {
                if ((this.IssuedDateTimeField.Equals(value) != true)) {
                    this.IssuedDateTimeField = value;
                    this.RaisePropertyChanged("IssuedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MkbCode {
            get {
                return this.MkbCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MkbCodeField, value) != true)) {
                    this.MkbCodeField = value;
                    this.RaisePropertyChanged("MkbCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobDto", Namespace="http://schemas.datacontract.org/2004/07/EMKService.Data.Dto")]
    [System.SerializableAttribute()]
    public partial class JobDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OgrnCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SphereField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateEnd {
            get {
                return this.DateEndField;
            }
            set {
                if ((this.DateEndField.Equals(value) != true)) {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateStart {
            get {
                return this.DateStartField;
            }
            set {
                if ((this.DateStartField.Equals(value) != true)) {
                    this.DateStartField = value;
                    this.RaisePropertyChanged("DateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OgrnCode {
            get {
                return this.OgrnCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OgrnCodeField, value) != true)) {
                    this.OgrnCodeField = value;
                    this.RaisePropertyChanged("OgrnCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sphere {
            get {
                return this.SphereField;
            }
            set {
                if ((object.ReferenceEquals(this.SphereField, value) != true)) {
                    this.SphereField = value;
                    this.RaisePropertyChanged("Sphere");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressDto", Namespace="http://schemas.datacontract.org/2004/07/EMKService.Data.Dto")]
    [System.SerializableAttribute()]
    public partial class AddressDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeoDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdAddressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Appartment {
            get {
                return this.AppartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AppartmentField, value) != true)) {
                    this.AppartmentField = value;
                    this.RaisePropertyChanged("Appartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Building {
            get {
                return this.BuildingField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingField, value) != true)) {
                    this.BuildingField = value;
                    this.RaisePropertyChanged("Building");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeoData {
            get {
                return this.GeoDataField;
            }
            set {
                if ((object.ReferenceEquals(this.GeoDataField, value) != true)) {
                    this.GeoDataField = value;
                    this.RaisePropertyChanged("GeoData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdAddressType {
            get {
                return this.IdAddressTypeField;
            }
            set {
                if ((this.IdAddressTypeField.Equals(value) != true)) {
                    this.IdAddressTypeField = value;
                    this.RaisePropertyChanged("IdAddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((this.PostalCodeField.Equals(value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringAddress {
            get {
                return this.StringAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StringAddressField, value) != true)) {
                    this.StringAddressField = value;
                    this.RaisePropertyChanged("StringAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentDto", Namespace="http://schemas.datacontract.org/2004/07/EMKService.Data.Dto")]
    [System.SerializableAttribute()]
    public partial class DocumentDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpiredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdDocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IssuedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocN {
            get {
                return this.DocNField;
            }
            set {
                if ((object.ReferenceEquals(this.DocNField, value) != true)) {
                    this.DocNField = value;
                    this.RaisePropertyChanged("DocN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocS {
            get {
                return this.DocSField;
            }
            set {
                if ((object.ReferenceEquals(this.DocSField, value) != true)) {
                    this.DocSField = value;
                    this.RaisePropertyChanged("DocS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpiredDate {
            get {
                return this.ExpiredDateField;
            }
            set {
                if ((this.ExpiredDateField.Equals(value) != true)) {
                    this.ExpiredDateField = value;
                    this.RaisePropertyChanged("ExpiredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdDocumentType {
            get {
                return this.IdDocumentTypeField;
            }
            set {
                if ((this.IdDocumentTypeField.Equals(value) != true)) {
                    this.IdDocumentTypeField = value;
                    this.RaisePropertyChanged("IdDocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdProvider {
            get {
                return this.IdProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.IdProviderField, value) != true)) {
                    this.IdProviderField = value;
                    this.RaisePropertyChanged("IdProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IssuedDate {
            get {
                return this.IssuedDateField;
            }
            set {
                if ((this.IssuedDateField.Equals(value) != true)) {
                    this.IssuedDateField = value;
                    this.RaisePropertyChanged("IssuedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderName {
            get {
                return this.ProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderNameField, value) != true)) {
                    this.ProviderNameField = value;
                    this.RaisePropertyChanged("ProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionCode {
            get {
                return this.RegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionCodeField, value) != true)) {
                    this.RegionCodeField = value;
                    this.RaisePropertyChanged("RegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedRecordDto", Namespace="http://schemas.datacontract.org/2004/07/EMKService.Data.Dto")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PixServiseTests.EMKServise.ReferralDto))]
    public partial class MedRecordDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdLPUField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdLPU {
            get {
                return this.IdLPUField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLPUField, value) != true)) {
                    this.IdLPUField = value;
                    this.RaisePropertyChanged("IdLPU");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EMKServise.IEmkService")]
    public interface IEmkService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSupport/GetVersion", ReplyAction="http://tempuri.org/IServiceSupport/GetVersionResponse")]
        PixServiseTests.EMKServise.VersionInfo GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSupport/GetVersion", ReplyAction="http://tempuri.org/IServiceSupport/GetVersionResponse")]
        System.Threading.Tasks.Task<PixServiseTests.EMKServise.VersionInfo> GetVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/AddCase", ReplyAction="http://tempuri.org/IEmkService/AddCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault), Action="http://tempuri.org/IEmkService/AddCaseRequestFaultFault", Name="RequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault[]), Action="http://tempuri.org/IEmkService/AddCaseListOf_RequestFaultFault", Name="ArrayOfRequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        void AddCase(string guid, PixServiseTests.EMKServise.CaseBase caseDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/AddCase", ReplyAction="http://tempuri.org/IEmkService/AddCaseResponse")]
        System.Threading.Tasks.Task AddCaseAsync(string guid, PixServiseTests.EMKServise.CaseBase caseDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/CreateCase", ReplyAction="http://tempuri.org/IEmkService/CreateCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault), Action="http://tempuri.org/IEmkService/CreateCaseRequestFaultFault", Name="RequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault[]), Action="http://tempuri.org/IEmkService/CreateCaseListOf_RequestFaultFault", Name="ArrayOfRequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        void CreateCase(string guid, PixServiseTests.EMKServise.CaseBase createCaseDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/CreateCase", ReplyAction="http://tempuri.org/IEmkService/CreateCaseResponse")]
        System.Threading.Tasks.Task CreateCaseAsync(string guid, PixServiseTests.EMKServise.CaseBase createCaseDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/CloseCase", ReplyAction="http://tempuri.org/IEmkService/CloseCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault), Action="http://tempuri.org/IEmkService/CloseCaseRequestFaultFault", Name="RequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault[]), Action="http://tempuri.org/IEmkService/CloseCaseListOf_RequestFaultFault", Name="ArrayOfRequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        void CloseCase(string guid, PixServiseTests.EMKServise.CaseBase caseDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/CloseCase", ReplyAction="http://tempuri.org/IEmkService/CloseCaseResponse")]
        System.Threading.Tasks.Task CloseCaseAsync(string guid, PixServiseTests.EMKServise.CaseBase caseDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/UpdateCase", ReplyAction="http://tempuri.org/IEmkService/UpdateCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault[]), Action="http://tempuri.org/IEmkService/UpdateCaseListOf_RequestFaultFault", Name="ArrayOfRequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault), Action="http://tempuri.org/IEmkService/UpdateCaseRequestFaultFault", Name="RequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        void UpdateCase(string guid, PixServiseTests.EMKServise.CaseBase caseDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/UpdateCase", ReplyAction="http://tempuri.org/IEmkService/UpdateCaseResponse")]
        System.Threading.Tasks.Task UpdateCaseAsync(string guid, PixServiseTests.EMKServise.CaseBase caseDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/AddMedRecord", ReplyAction="http://tempuri.org/IEmkService/AddMedRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault[]), Action="http://tempuri.org/IEmkService/AddMedRecordListOf_RequestFaultFault", Name="ArrayOfRequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault), Action="http://tempuri.org/IEmkService/AddMedRecordRequestFaultFault", Name="RequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        void AddMedRecord(string guid, string idLpu, string idPatientMis, string idCaseMis, PixServiseTests.EMKServise.MedRecord medRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/AddMedRecord", ReplyAction="http://tempuri.org/IEmkService/AddMedRecordResponse")]
        System.Threading.Tasks.Task AddMedRecordAsync(string guid, string idLpu, string idPatientMis, string idCaseMis, PixServiseTests.EMKServise.MedRecord medRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/AddStepToCase", ReplyAction="http://tempuri.org/IEmkService/AddStepToCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault[]), Action="http://tempuri.org/IEmkService/AddStepToCaseListOf_RequestFaultFault", Name="ArrayOfRequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault), Action="http://tempuri.org/IEmkService/AddStepToCaseRequestFaultFault", Name="RequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        void AddStepToCase(string guid, string idLpu, string idPatientMis, string idCaseMis, PixServiseTests.EMKServise.StepBase step);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/AddStepToCase", ReplyAction="http://tempuri.org/IEmkService/AddStepToCaseResponse")]
        System.Threading.Tasks.Task AddStepToCaseAsync(string guid, string idLpu, string idPatientMis, string idCaseMis, PixServiseTests.EMKServise.StepBase step);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/GetReferralList", ReplyAction="http://tempuri.org/IEmkService/GetReferralListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault), Action="http://tempuri.org/IEmkService/GetReferralListRequestFaultFault", Name="RequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault[]), Action="http://tempuri.org/IEmkService/GetReferralListListOf_RequestFaultFault", Name="ArrayOfRequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        PixServiseTests.EMKServise.ReferralTupleDto[] GetReferralList(string guid, string idLpu, byte idReferralType, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/GetReferralList", ReplyAction="http://tempuri.org/IEmkService/GetReferralListResponse")]
        System.Threading.Tasks.Task<PixServiseTests.EMKServise.ReferralTupleDto[]> GetReferralListAsync(string guid, string idLpu, byte idReferralType, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/CancelCase", ReplyAction="http://tempuri.org/IEmkService/CancelCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault), Action="http://tempuri.org/IEmkService/CancelCaseRequestFaultFault", Name="RequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(PixServiseTests.EMKServise.RequestFault[]), Action="http://tempuri.org/IEmkService/CancelCaseListOf_RequestFaultFault", Name="ArrayOfRequestFault", Namespace="http://schemas.datacontract.org/2004/07/N3.EMK.Dto.Common")]
        void CancelCase(string guid, string idLpu, string idPatientMis, string idCaseMis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmkService/CancelCase", ReplyAction="http://tempuri.org/IEmkService/CancelCaseResponse")]
        System.Threading.Tasks.Task CancelCaseAsync(string guid, string idLpu, string idPatientMis, string idCaseMis);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmkServiceChannel : PixServiseTests.EMKServise.IEmkService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmkServiceClient : System.ServiceModel.ClientBase<PixServiseTests.EMKServise.IEmkService>, PixServiseTests.EMKServise.IEmkService {
        
        public EmkServiceClient() {
        }
        
        public EmkServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmkServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmkServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmkServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PixServiseTests.EMKServise.VersionInfo GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public System.Threading.Tasks.Task<PixServiseTests.EMKServise.VersionInfo> GetVersionAsync() {
            return base.Channel.GetVersionAsync();
        }
        
        public void AddCase(string guid, PixServiseTests.EMKServise.CaseBase caseDto) {
            base.Channel.AddCase(guid, caseDto);
        }
        
        public System.Threading.Tasks.Task AddCaseAsync(string guid, PixServiseTests.EMKServise.CaseBase caseDto) {
            return base.Channel.AddCaseAsync(guid, caseDto);
        }
        
        public void CreateCase(string guid, PixServiseTests.EMKServise.CaseBase createCaseDto) {
            base.Channel.CreateCase(guid, createCaseDto);
        }
        
        public System.Threading.Tasks.Task CreateCaseAsync(string guid, PixServiseTests.EMKServise.CaseBase createCaseDto) {
            return base.Channel.CreateCaseAsync(guid, createCaseDto);
        }
        
        public void CloseCase(string guid, PixServiseTests.EMKServise.CaseBase caseDto) {
            base.Channel.CloseCase(guid, caseDto);
        }
        
        public System.Threading.Tasks.Task CloseCaseAsync(string guid, PixServiseTests.EMKServise.CaseBase caseDto) {
            return base.Channel.CloseCaseAsync(guid, caseDto);
        }
        
        public void UpdateCase(string guid, PixServiseTests.EMKServise.CaseBase caseDto) {
            base.Channel.UpdateCase(guid, caseDto);
        }
        
        public System.Threading.Tasks.Task UpdateCaseAsync(string guid, PixServiseTests.EMKServise.CaseBase caseDto) {
            return base.Channel.UpdateCaseAsync(guid, caseDto);
        }
        
        public void AddMedRecord(string guid, string idLpu, string idPatientMis, string idCaseMis, PixServiseTests.EMKServise.MedRecord medRecord) {
            base.Channel.AddMedRecord(guid, idLpu, idPatientMis, idCaseMis, medRecord);
        }
        
        public System.Threading.Tasks.Task AddMedRecordAsync(string guid, string idLpu, string idPatientMis, string idCaseMis, PixServiseTests.EMKServise.MedRecord medRecord) {
            return base.Channel.AddMedRecordAsync(guid, idLpu, idPatientMis, idCaseMis, medRecord);
        }
        
        public void AddStepToCase(string guid, string idLpu, string idPatientMis, string idCaseMis, PixServiseTests.EMKServise.StepBase step) {
            base.Channel.AddStepToCase(guid, idLpu, idPatientMis, idCaseMis, step);
        }
        
        public System.Threading.Tasks.Task AddStepToCaseAsync(string guid, string idLpu, string idPatientMis, string idCaseMis, PixServiseTests.EMKServise.StepBase step) {
            return base.Channel.AddStepToCaseAsync(guid, idLpu, idPatientMis, idCaseMis, step);
        }
        
        public PixServiseTests.EMKServise.ReferralTupleDto[] GetReferralList(string guid, string idLpu, byte idReferralType, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetReferralList(guid, idLpu, idReferralType, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<PixServiseTests.EMKServise.ReferralTupleDto[]> GetReferralListAsync(string guid, string idLpu, byte idReferralType, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetReferralListAsync(guid, idLpu, idReferralType, startDate, endDate);
        }
        
        public void CancelCase(string guid, string idLpu, string idPatientMis, string idCaseMis) {
            base.Channel.CancelCase(guid, idLpu, idPatientMis, idCaseMis);
        }
        
        public System.Threading.Tasks.Task CancelCaseAsync(string guid, string idLpu, string idPatientMis, string idCaseMis) {
            return base.Channel.CancelCaseAsync(guid, idLpu, idPatientMis, idCaseMis);
        }
    }
}
